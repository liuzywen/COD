import argparse
parser = argparse.ArgumentParser()
parser.add_argument('--num_classes', type=int, default=1)
parser.add_argument('--img_size', type=int, default=256, help='input patch size of network input')
parser.add_argument('--vit_name', type=str, default='ViT-B_16')
parser.add_argument('--n_skip', type=int, default=3, help='using number of skip-connect, default is num')
parser.add_argument('--vit_patches_size', type=int, default=16, help='vit_patches_size, default is 16')

parser.add_argument('--layers', type=int, default=50, help='resnet')
parser.add_argument('--classes', type=int, default=1, help='')
parser.add_argument('--zoom_factor', type=int, default=8, help='')
parser.add_argument('--stage', type=int, default=2, help='')
parser.add_argument('--num_clusters', type=int, default=32, help='')
parser.add_argument('--epoch', type=int, default=200, help='epoch number')
parser.add_argument('--lr', type=float, default=5e-5, help='learning rate')
# parser.add_argument('--lr', type=float, default=1e-4, help='learning rate')
parser.add_argument('--num_thread', type=int, default=1)
parser.add_argument('--batchsize', type=int, default=2, help='training batch size')
parser.add_argument('--trainsize', type=int, default=256, help='training dataset size')
parser.add_argument('--clip', type=float, default=0.5, help='gradient clipping margin')
parser.add_argument('--decay_rate', type=float, default=0.1, help='decay rate of learning rate')
parser.add_argument('--decay_epoch', type=int, default=100, help='every n epochs decay learning rate')
# parser.add_argument('--decay_epoch', type=int, default=50, help='every n epochs decay learning rate')
parser.add_argument('--load_mit', type=str, default='model/initmodel/mit_b5.pth', help='train from checkpoints')
parser.add_argument('--pretrained', type=bool, default=True, help='train from checkpoints')
parser.add_argument('--gpu_id', type=str, default='0', help='train use gpu')
parser.add_argument('--image_root', type=str, default='I:/camouflaged/Dataset/TrainDataset/Imgs/', help='the training rgb images root')
parser.add_argument('--edge_root', type=str, default='I:/camouflaged/Dataset/TrainDataset/Edge/', help='the training depth images root')
parser.add_argument('--gt_root', type=str, default='I:/camouflaged/Dataset/TrainDataset/GT/', help='the training gt images root')
parser.add_argument('--test_image_root', type=str, default='I:/camouflaged/Dataset/TestDataset/CAMO/Imgs/', help='the test rgb images root')
parser.add_argument('--test_edge_root', type=str, default='I:/camouflaged/Dataset/TestDataset/CAMO/Edge/', help='the test depth images root')
parser.add_argument('--test_gt_root', type=str, default='I:/camouflaged/Dataset/TestDataset/CAMO/GT/', help='the test gt images root')
parser.add_argument('--save_path', type=str, default='./no_crosstransV2/', help='the path to save models and logs')
opt = parser.parse_args()
